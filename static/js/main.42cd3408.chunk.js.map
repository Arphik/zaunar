{"version":3,"sources":["app/components/header/HeaderMenu.tsx","app/components/header/HaburgerMenu.tsx","app/components/header/Header.tsx","app/components/content/views/LargeBricksView.tsx","app/components/content/views/SmallBricksView.tsx","app/components/content/views/LargeListView.tsx","app/components/content/views/SmallListView.tsx","app/components/content/filter/DataOperations.ts","app/components/content/ItemsList.tsx","app/components/content/ItemView.tsx","app/components/panel/PanelAddProd.tsx","app/components/panel/PanelEditProd.tsx","app/components/panel/PanelProdsList.tsx","app/components/panel/PanelMenu.tsx","app/components/panel/Panel.tsx","app/components/content/Cart.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["HeaderMenu","className","to","icon","faHeadset","faShoppingCart","HaburgerMenu","id","type","name","htmlFor","Header","src","alt","placeholder","faSearch","LargeBricksView","data","toCart","elements","map","index","image","price","title","gpumodel","vram","memorytype","connectors","faBalanceScale","onClick","faCartPlus","console","log","SmallBricksView","items","LargeListView","SmallListView","shortStats","faImage","DataOperations","mod","fetchOpts","this","method","mode","headers","Accept","fetch","response","json","item","body","JSON","stringify","Headers","error","filterObject","ids","ItemsList","props","changeView","choice","newView","state","addToCart","changeFilteredData","filter","view","dataOperations","bind","setState","getFullData","then","newIdsString","localStorage","getItem","setItem","Component","ItemView","description","qty","producer","match","params","PanelAddProd","updateName","e","currentTarget","value","updateDesc","updatePrice","Number","updateShortStats","updateVram","updateImage","updateModel","updateProducer","updateMemorytype","updateConnectors","addProduct","a","preventDefault","onChange","rows","React","PanelEditProd","updateInput","newItem","currItem","key","changeProduct","panelEditInputs","PanelProdsList","dataOps","PanelMenu","activeClassName","Panel","path","component","Cart","setCartItems","split","itemId","length","includes","push","newCartItems","removeFromCart","cartItems","itemIds","newString","replaceAll","clear","cleanCart","App","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.42cd3408.chunk.js","sourcesContent":["import React from 'react';\r\nimport './HeaderMenu.scss';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeadset, faShoppingCart, faUser, faHeart } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst HeaderMenu: React.FC = () => {\r\n    return (\r\n        <nav className=\"header__menu\">\r\n            <Link to=\"\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon className=\"header__link--icon\" icon={faHeadset} />\r\n                    <span className=\"header__link--text\">Pomoc i kontakt</span>\r\n                </div>\r\n            </Link>\r\n            <span className=\"header__separator\"></span>\r\n            {/* <Link to=\"/panel\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faUser} />\r\n                    <span className=\"header__link--text\">Twoje konto</span>\r\n                </div>\r\n            </Link> */}\r\n            {/* <Link to=\"\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faHeart} />\r\n                    <span className=\"header__link--text\">Twoje listy</span>\r\n                </div>\r\n            </Link> */}\r\n            <Link to=\"/cart\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faShoppingCart} />\r\n                    <span className=\"header__link--text\">Koszyk</span>\r\n                </div>\r\n            </Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default HeaderMenu;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport './HaburgerMenu.scss';\r\n\r\nconst HaburgerMenu = () => {\r\n\r\n    // console.log(Menu);\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <input id=\"navbar__checkbox\" type=\"checkbox\" className=\"navbar__checkbox\" name=\"navbar__checkbox\"/>\r\n            <label htmlFor=\"navbar__checkbox\" className=\"navbar__btn--label\">\r\n                <div className=\"navbar__btn--line\"></div>\r\n            </label>\r\n            <div className=\"navbar__content\">\r\n\r\n                <div className=\"navbar__link\" >\r\n                    <Link to=\"/products\" className=\"navbar__link--a\">Produkty</Link>\r\n                </div>\r\n                <div className=\"navbar__link\" >\r\n                <Link to=\"/blog\" className=\"navbar__link--a\">Blog</Link>\r\n                </div>\r\n                <div className=\"navbar__link\" >\r\n                <Link to=\"/about\" className=\"navbar__link--a\">O sklepie</Link>\r\n                </div>\r\n                <div className=\"navbar__link\" >\r\n                <Link to=\"/contact\" className=\"navbar__link--a\">Kontakt</Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default HaburgerMenu;","import React from 'react';\r\nimport './Header.scss';\r\nimport HeaderMenu from './HeaderMenu';\r\nimport HaburgerMenu from './HaburgerMenu';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <header className=\"header\">\r\n\r\n            <div className=\"header__container1\">\r\n                <Link to=\"/\" className=\"header__logo\"><img src=\"./assets/logo.png\" alt=\"\" className=\"header__logo--img\"/></Link>\r\n\r\n                <div className=\"header__search\">\r\n                    <input type=\"text\" name=\"\" id=\"\" className=\"header__search--input\" placeholder=\"What are you searching?\" />\r\n                    <button className=\"header__search--button\"><FontAwesomeIcon icon={faSearch} /></button>\r\n                </div>\r\n\r\n                <HeaderMenu />\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"header__container2\">\r\n\r\n                <div className=\"header__top-menu\">\r\n                    <Link to=\"/sup\" className=\"header__top-menu--link\">\r\n                        <span className=\"header__top-menu--a\">\r\n                            DESKI SUP\r\n                        </span>\r\n                    </Link>\r\n                    <Link to=\"/wood\" className=\"header__top-menu--link\">\r\n                        <span className=\"header__top-menu--a\">\r\n                            WYROBY DREWNIANE\r\n                        </span>\r\n                    </Link>\r\n                    <HaburgerMenu />\r\n                </div>\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './LargeBricksView.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport { IItem } from './gpus.model';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\ntype ViewProps = {\r\n  data: IItem[],\r\n  toCart(id: string): void,\r\n}\r\n\r\nconst LargeBricksView = ({ data, toCart }: ViewProps): JSX.Element => {\r\n\r\n  const elements = data.map(({ id, image, title, price, gpumodel, vram, memorytype, connectors }: IItem, index: number) => (\r\n    <Link to={`search/${id}`} className=\"large-bricks__item\" key={index}>\r\n\r\n      <div className=\"large-bricks__compare\">\r\n        <span className=\"large-bricks__compare--icon\">\r\n          <FontAwesomeIcon icon={faBalanceScale} />\r\n        </span>\r\n      </div>\r\n\r\n      <img className=\"large-bricks__image\" src={`./assets/${image}`} alt=\"\" />\r\n\r\n      <div className=\"large-bricks__desc\">\r\n        <div className=\"large-bricks__short-stats\">\r\n          <p className=\"large-bricks__short-stats--p\">Układ: {gpumodel}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Pamięć: {vram}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Rodzaj pamięci: {memorytype}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Złącza: {connectors}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"large-bricks__price\"><span>{price} zł</span></div>\r\n\r\n      <span className=\"large-bricks__cart\" onClick={() => toCart(id)}><FontAwesomeIcon icon={faCartPlus} /></span>\r\n\r\n    </Link>\r\n  ));\r\n  console.log('elements ', elements);\r\n\r\n  return (\r\n    <div className=\"large-bricks\">\r\n      {elements}\r\n    </div>);\r\n}\r\n\r\nexport default LargeBricksView;","import React from 'react';\r\nimport './SmallBricksView.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { IGpusModel, IItem } from './gpus.model';\r\n\r\ntype ViewProps = {\r\n  data: IItem[]\r\n}\r\n\r\nconst SmallBricksView = ({data}: ViewProps): JSX.Element => {\r\n\r\n  const items = data.map(({id, image, title, price, gpumodel, vram, memorytype, connectors}: IItem, index) => (\r\n        <div className=\"small-bricks__item\" key={index}>\r\n\r\n          <div className=\"small-bricks__image--container\">\r\n            <div className=\"small-bricks__checkbox--container\"><input type=\"checkbox\" className=\"small-bricks__checkbox\"/> do porównania</div>\r\n            <Link to={`search/${id}`}><img className=\"small-bricks__image\" src={image} alt=\"\"/></Link>\r\n          </div>\r\n\r\n          <div className=\"small-bricks__short-desc\">\r\n            <Link to=\"./\" className=\"small-bricks__title\">{title}</Link>\r\n            <div className=\"small-bricks__short-stats\">\r\n            <p className=\"large-bricks__short-stats--p\">Układ: {gpumodel}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Pamięć: {vram}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Rodzaj pamięci: {memorytype}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Złącza: {connectors}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"small-bricks__price\">{price} zł</div>\r\n        </div>\r\n  ));\r\n  return (\r\n    <div className=\"small-bricks\">\r\n      {items}\r\n    </div>);\r\n}\r\n  \r\nexport default SmallBricksView;","import React from 'react';\r\nimport './LargeListView.scss';\r\nimport {IGpusModel, IItem} from './gpus.model';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype ViewProps = {\r\n  data: IItem[]\r\n}\r\n\r\nconst LargeListView = ({data}: ViewProps): JSX.Element => {\r\n\r\n  const items = data.map(({id, image, title, price, gpumodel, vram, memorytype, connectors}: IItem, index) => (\r\n    <div className=\"large-list__item\" key={index}>\r\n\r\n      <div className=\"large-list__image--container\">\r\n        <Link to={`search/${id}`} className=\"large-list__link\"><img src={image} className=\"large-list__image\" alt=\"\"/></Link>\r\n      </div>\r\n\r\n      <div className=\"large-list__short-desc\">\r\n        <div className=\"large-list__title\"><Link to=\"./\">{title}</Link></div>\r\n        <div className=\"large-list__short-stats\">\r\n            Układ: {gpumodel} Pamięć: {vram} Rodzaj pamięci: {memorytype} Złącza: {connectors}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"large-list__checkbox--container\"><input type=\"checkbox\" className=\"large-list__checkbox\"/> do porównania</div>\r\n\r\n      <div className=\"large-list__price\"><span className=\"large-list__price--span\">{price} zł</span></div>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"large-list\">\r\n      {items}\r\n    </div>);\r\n}\r\n\r\nexport default LargeListView;","import React from 'react';\r\nimport './SmallListView.scss';\r\nimport { IGpusModel, IItem } from './gpus.model';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faImage } from '@fortawesome/free-regular-svg-icons';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\ntype ViewProps = {\r\n  data: IItem[]\r\n}\r\n\r\nconst SmallListView = ({data}: ViewProps): JSX.Element => {\r\n  // console.log(\"SMALL LIST DATA\", data);\r\n\r\n  const items = data.map(({id, image, title, shortStats, price, gpumodel, vram, memorytype, connectors}: IItem, index) => (\r\n    <Link to={`search/${id}`} className=\"small-list__item\" key={index}>\r\n      <div className=\"small-list__image--container\">\r\n        <FontAwesomeIcon icon={faImage} />\r\n        <img src={image} className=\"small-list__hover-image\" alt=\"\"/>\r\n      </div>\r\n  \r\n      <h5 className=\"small-list__title\">{title}</h5>\r\n\r\n      <span className=\"small-list__short-stats\">{shortStats}</span>\r\n  \r\n      <div className=\"small-list__compare\">\r\n        <span className=\"small-list__compare--icon\">\r\n          <FontAwesomeIcon icon={faBalanceScale}/>\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"small-list__cart\">\r\n        <span className=\"small-list__cart--icon\">\r\n          <FontAwesomeIcon icon={faCartPlus}/>\r\n        </span>\r\n      </div>\r\n  \r\n  <div className=\"small-list__price\">{price} zł</div>\r\n    </Link>\r\n  ));\r\n  \r\n  return (\r\n    <div className=\"small-list\">\r\n      {items}\r\n    </div>);\r\n}\r\n\r\nexport default SmallListView;\r\n\r\n\r\n","import data from '../../../../assets/shop-items.json';\r\nimport ItemView from '../ItemView';\r\nimport { IItem, IFilterObject } from '../views/gpus.model';\r\n\r\ninterface IDataOperations {\r\n  getFullData(): Promise<IItem[]>;\r\n  getItem(id: string): Promise<IItem>;\r\n  addProduct(data: IItem): void;\r\n  editProduct(data: IItem): void;\r\n  deleteItem(id: string): void;\r\n  getFilteredData(items: IItem[], filterObject?: IFilterObject, ids?: string[]): IItem[];\r\n}\r\n\r\nexport default class DataOperations implements IDataOperations {\r\n  mod: RequestMode;\r\n  fetchOpts: RequestInit;\r\n\r\n  constructor() {\r\n    \r\n    this.mod = 'cors';\r\n    this.fetchOpts = {\r\n      method: 'GET',\r\n      mode: this.mod,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n  }\r\n\r\n  async getFullData(): Promise<IItem[]> {\r\n    try {\r\n      const response = await fetch(\r\n        'http://localhost:3000/products',\r\n        this.fetchOpts,\r\n      );\r\n      const data = await response.json();\r\n      // console.log('Data Ops data:');\r\n      // console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getItem(id: string): Promise<IItem> {\r\n    // console.log(\"DataOps getItem ID \", id);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3000/products/${id}`,\r\n        this.fetchOpts,\r\n      );\r\n      const item = await response.json();\r\n      return item;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async addProduct(data: IItem){\r\n\r\n    const url = 'http://localhost:3000/products';\r\n\r\n    const mode: RequestMode = 'cors';\r\n\r\n    const fetchOpts = {\r\n        body: JSON.stringify(data),\r\n        method: 'POST',\r\n        mode: mode,\r\n        headers: new Headers({\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        }),\r\n    };\r\n    try {\r\n      console.log('Fetch add product ', data);\r\n        const response = await fetch(url, fetchOpts);\r\n        console.log('Fetch response ', response.body);\r\n        return response;\r\n    } catch (error) {\r\n        console.log('Fetch error ', error);\r\n    }\r\n  }\r\n\r\n  async editProduct(data: IItem){\r\n\r\n    const url = 'http://localhost:3000/products';\r\n\r\n    const mode: RequestMode = 'cors';\r\n    const fetchOpts = {\r\n        body: JSON.stringify(data),\r\n        method: 'UPDATE',\r\n        mode: mode,\r\n        headers: new Headers({\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        }),\r\n    };\r\n    try {\r\n        console.log('Fetch edit product ', data);\r\n        const response = await fetch(url, fetchOpts);\r\n        console.log('Fetch response ', response.body);\r\n        return response;\r\n    } catch (error) {\r\n        console.log('Fetch error ', error);\r\n    }\r\n  }\r\n\r\n  deleteItem(id: string): void {\r\n    console.log('DataOperations delete ', id);\r\n    const mode: RequestMode = 'cors';\r\n    const fetchOpts = {\r\n      method: 'DELETE',\r\n      mode: mode,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    try {\r\n      fetch(`http://localhost:3000/products/${id}`, fetchOpts);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  getFilteredData(items: IItem[], filterObject?: IFilterObject, ids?: string[]): IItem[] {\r\n      console.log(\"setFilteredData items\", items);\r\n      let newItems: IItem[] = items;\r\n\r\n      \r\n\r\n      // if(filterObject.gpumodel.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.gpumodel\r\n      //         .find((gpumodel) => gpumodel === item.gpumodel) !== undefined);\r\n      // }\r\n      // if(filterObject.producer.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.producer\r\n      //         .find((producer) => producer === item.producer) !== undefined);\r\n      // }\r\n      // if(filterObject.memorytype.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.memorytype\r\n      //         .find((memorytype) => memorytype === item.memorytype) !== undefined);\r\n      // }\r\n      // if(filterObject.vram.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.vram\r\n      //         .find((vram) => vram === item.vram) !== undefined);\r\n      // }\r\n      return newItems;\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Filter from './filter/Filter';\r\nimport './ItemsList.scss';\r\n\r\nimport LargeBricksView from './views/LargeBricksView';\r\nimport SmallBricksView from './views/SmallBricksView';\r\nimport LargeListView from './views/LargeListView';\r\nimport SmallListView from './views/SmallListView';\r\nimport DataOperations from './filter/DataOperations';\r\nimport { IItem } from './views/gpus.model';\r\n\r\ninterface ItemsListState {\r\n  data: IItem[];\r\n  view: number;\r\n  dataOperations: DataOperations;\r\n}\r\n\r\nexport default class ItemsList extends Component<{}, ItemsListState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      view: 1,\r\n      dataOperations: new DataOperations(),\r\n    }\r\n\r\n    this.addToCart = this.addToCart.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.setState(() => ({ dataOperations: new DataOperations()}))\r\n\r\n    const promisedData = this.state.dataOperations.getFullData();\r\n    promisedData.then((data) => {\r\n\r\n      this.setState(() =>\r\n        ({ data: data })\r\n      );\r\n\r\n    })\r\n  }\r\n\r\n  addToCart(id: string, i: number = 0): void {\r\n    const newIdsString = localStorage.getItem('cartItems')+` ${id}`;\r\n    localStorage.setItem('cartItems', newIdsString);\r\n\r\n    console.log('localStorage', localStorage.getItem('cartItems'));\r\n  }\r\n\r\n  changeView = (choice: number): JSX.Element => {\r\n    let newView = (<div></div>);\r\n    switch (choice) {\r\n      case 1: newView = (<LargeBricksView data={this.state.data} toCart={this.addToCart} />);\r\n        break;\r\n      case 2: newView = (<SmallBricksView data={this.state.data} />);\r\n        break;\r\n      case 3: newView = (<LargeListView data={this.state.data} />);\r\n        break;\r\n      case 4: newView = (<SmallListView data={this.state.data} />);\r\n        break;\r\n    }\r\n    return newView;\r\n  }\r\n\r\n  changeFilteredData = (filter: any): void => {\r\n    // let newFilteredData = JSON.parse(JSON.stringify(this.state.data));\r\n    // newFilteredData.items = this.state.dataOps.setFilteredData(this.state.data, filter);\r\n    // this.setState(() => ({filteredData: newFilteredData}));\r\n    //  console.log(\"FILTERED\", this.state.filteredData);\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    console.log('ItemsList data ', this.state.data);\r\n    return (\r\n      <div className=\"shop-content\">\r\n        {/* <Filter data={this.state.data} changeFilteredData={this.changeFilteredData}/> */}\r\n\r\n\r\n        <div className=\"items-list\">\r\n          <div className=\"items-list__change-view--container\">\r\n            <div className=\"items-list__change-view--btn largeBricks\" onClick={() => this.setState(() => ({ view: 1 }))}></div>\r\n            <div className=\"items-list__change-view--btn smallBricks\" onClick={() => this.setState(() => ({ view: 2 }))}></div>\r\n            <div className=\"items-list__change-view--btn largeList\" onClick={() => this.setState(() => ({ view: 3 }))}></div>\r\n            <div className=\"items-list__change-view--btn smallList\" onClick={() => this.setState(() => ({ view: 4 }))}></div>\r\n          </div>\r\n          {this.changeView(this.state.view)}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}","import React, { Component } from 'react';\r\nimport './ItemView.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport { IItem } from './views/gpus.model';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport DataOperations from './filter/DataOperations';\r\n\r\ninterface IProps{\r\n    _id: string,\r\n    match: {\r\n      isExact: boolean,\r\n      params: {\r\n        id: string\r\n      },\r\n    },\r\n}\r\n\r\ninterface IState{\r\n    item: IItem\r\n}\r\n\r\nexport default class ItemView extends Component<IProps, IState> {\r\n\r\n    constructor(props: any){\r\n      super(props);\r\n      this.state = {\r\n          item: {id: '', title: '', description: '', qty: 0, price: 0, shortStats: '', vram: '', image: '', gpumodel: '', producer: '', memorytype: '', connectors: ''}\r\n      }\r\n      // console.log(\"didMount data \", this.state.data);\r\n    }\r\n    componentDidMount(){\r\n\r\n      console.log(\"match\", this.props.match);\r\n\r\n      const dataOps = new DataOperations();\r\n\r\n      const promisedItem = dataOps.getItem(this.props.match.params.id);\r\n      promisedItem.then((item)=>{\r\n  \r\n        this.setState(() => \r\n          ({item: item})\r\n        );\r\n  \r\n      })\r\n    }\r\n    render(){\r\n        return (\r\n          <div className=\"item-view\">\r\n              <div className=\"item-view__compare\">\r\n              <span className=\"item-view__compare--icon\">\r\n                  <FontAwesomeIcon icon={faBalanceScale}/>\r\n              </span>\r\n              </div>\r\n              \r\n              <img className=\"item-view__image\" src={this.state.item.image} alt=\"\"/>\r\n          \r\n              <div className=\"item-view__desc\">\r\n              <Link to={`./${this.state.item.id}`} className=\"item-view__title\">{this.state.item.title}</Link>\r\n              <div className=\"item-view__short-stats\">\r\n                  <p className=\"item-view__short-stats--p\">Układ: {this.state.item.gpumodel}</p>\r\n                  <p className=\"item-view__short-stats--p\">Pamięć: {this.state.item.vram}</p>\r\n                  <p className=\"item-view__short-stats--p\">Rodzaj pamięci: {this.state.item.memorytype}</p>\r\n                  <p className=\"item-view__short-stats--p\">Złącza: {this.state.item.connectors}</p>\r\n              </div>\r\n              </div>\r\n              \r\n              <div className=\"item-view__price\"><span>{this.state.item.price} zł</span></div>\r\n              \r\n              <span className=\"item-view__cart\"><FontAwesomeIcon icon={faCartPlus} /></span>\r\n          </div>);\r\n      }\r\n\r\n}","import React from 'react';\r\nimport DataOperations from '../content/filter/DataOperations';\r\nimport './PanelAddProd.scss';\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\ninterface IState{\r\n    id: string,\r\n    title: string,\r\n    description: string,\r\n    qty: number,\r\n    price: number,\r\n    shortStats: string,\r\n    vram: string,\r\n    image: string,\r\n    gpumodel: string,\r\n    producer: string,\r\n    memorytype: string,\r\n    connectors: string,\r\n}\r\n\r\nexport default class PanelAddProd extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props);\r\n\r\n        this.state = {\r\n                id: 'id',\r\n                title: 'Lolforce RTX9950 Pamięć: 500 TB',\r\n                description: 'TestDescr',\r\n                qty: 1,\r\n                price: 10000000,\r\n                shortStats: 'Układ: Lolforce RTX9950 Pamięć: 500 TB Rodzaj pamięci: GDDR10XD Złącza: VGA 1szt., HighplayPort 9.90 5 szt.',\r\n                vram: '500 TB',\r\n                image: 'rtx2080tiasus.jpg',\r\n                gpumodel: 'RTX9950',\r\n                producer: 'Asus',\r\n                memorytype: 'GDDR10XD',\r\n                connectors: 'VGA 1szt., HighplayPort 9.90 5 szt.',\r\n        }\r\n    }\r\n\r\n    updateName = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({title: e.currentTarget.value});\r\n    }\r\n    updateDesc = (e: React.FormEvent<HTMLTextAreaElement>) => {\r\n        this.setState({description: e.currentTarget.value});\r\n    }\r\n    updatePrice = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({price: Number(e.currentTarget.value)});\r\n    }\r\n    updateShortStats = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({shortStats: e.currentTarget.value});\r\n    }\r\n    updateVram = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({vram: e.currentTarget.value});\r\n    }\r\n    updateImage = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({image: e.currentTarget.value});\r\n    }\r\n    updateModel = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({gpumodel: e.currentTarget.value});\r\n    }\r\n    updateProducer = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({producer: e.currentTarget.value});\r\n    }\r\n    updateMemorytype = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({memorytype: e.currentTarget.value});\r\n    }\r\n    updateConnectors = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({connectors: e.currentTarget.value});\r\n    }\r\n\r\n    // updateInput(e: { target: { name: keyof IState, value: any } }){\r\n    //     const key = e.target.name;\r\n    //     const value = e.target.value;\r\n    //     this.setState({ [key]: value });\r\n    // }\r\n\r\n    addProduct = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        console.log(\"Add product.\");\r\n        const dataOps = new DataOperations();\r\n        // dataOps.addProduct(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"panel__add-prod\">\r\n            <div className=\"panel__add-prod--title\">\r\n                Add product\r\n            </div>\r\n            <form className=\"panel__add-prod--form\">\r\n\r\n                <input onChange={this.updateName} name=\"name\" value={this.state.title} type=\"text\" className=\"panel__add-prod--name panel__add-prod--input\" placeholder=\"Name\"/>\r\n                <textarea onChange={this.updateDesc} name=\"desc\" className=\"panel__add-prod--desc panel__add-prod--input\" rows={4} placeholder=\"Description\"></textarea>\r\n                <input onChange={this.updateShortStats} name=\"shortStats\" type=\"text\" className=\"panel__add-prod--short-stats panel__add-prod--input\" placeholder=\"Short stats\"/>\r\n                <input onChange={this.updateVram} name=\"vram\" type=\"text\" className=\"panel__add-prod--vram panel__add-prod--input\" placeholder=\"Vram\"/>\r\n                <input onChange={this.updateImage} name=\"image\" type=\"text\" className=\"panel__add-prod--image panel__add-prod--input\" placeholder=\"Image\"/>\r\n                <input onChange={this.updateModel} name=\"model\" type=\"text\" className=\"panel__add-prod--model panel__add-prod--input\" placeholder=\"Model\"/>\r\n                <input onChange={this.updateProducer} name=\"producer\" type=\"text\" className=\"panel__add-prod--producer panel__add-prod--input\" placeholder=\"Producer\"/>\r\n                <input onChange={this.updateMemorytype} name=\"memorytype\" type=\"text\" className=\"panel__add-prod--memorytype panel__add-prod--input\" placeholder=\"Memory type\"/>\r\n                <input onChange={this.updateConnectors} name=\"connectors\" type=\"text\" className=\"panel__add-prod--connectors panel__add-prod--input\" placeholder=\"Connectors\"/>\r\n                <input onChange={this.updatePrice} name=\"shortStats\" type=\"text\" className=\"panel__add-prod--price panel__add-prod--input\" placeholder=\"Price\"/>\r\n\r\n                <input onClick={this.addProduct} type=\"button\" className=\"panel__add-prod--submit panel__add-prod--input\" value=\"Add\"/>\r\n\r\n            </form>\r\n        </div>\r\n    );}\r\n}","import React from 'react';\r\nimport DataOperations from '../content/filter/DataOperations';\r\nimport ItemView from '../content/ItemView';\r\nimport { IItem } from '../content/views/gpus.model';\r\nimport './PanelEditProd.scss';\r\n\r\ninterface IProps {\r\n    item: IItem,\r\n    match: {\r\n        isExact: boolean,\r\n        params: {\r\n            id: string\r\n        },\r\n    },\r\n}\r\n\r\ninterface IState {\r\n    currItem: IItem,\r\n    panelEditInputs: JSX.Element[],\r\n}\r\n\r\nexport default class PanelEditProd extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currItem: {\r\n                id: '',\r\n                title: '',\r\n                description: '',\r\n                qty: 0,\r\n                price: 0,\r\n                shortStats: '',\r\n                vram: '',\r\n                image: '',\r\n                gpumodel: '',\r\n                producer: '',\r\n                memorytype: '',\r\n                connectors: '',\r\n            },\r\n            panelEditInputs: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const dataOps = new DataOperations();\r\n        dataOps.getItem(this.props.match.params.id)\r\n            .then((item) => {\r\n                console.log('Edited item ', item);\r\n                // const newItem: { [key: string]: string | number } = {...item};\r\n                // let inputs: JSX.Element[] = [];\r\n                // let key: string;\r\n                // for (key in item) {\r\n                //         inputs.push(<input type=\"text\" onChange={this.updateInput} className={`panel__edit-prod--${key}`}\r\n                //             name={key} />);\r\n                // }\r\n                this.setState({ currItem: item });\r\n            });\r\n    }\r\n\r\n    updateInput = (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        // console.log('Update from input.', this.state.currItem.qty);\r\n        let newItem: { [index: string]: string | number} = { ...this.state.currItem };\r\n        const key: string = e.currentTarget.name;\r\n        const value: number | string = e.currentTarget.value;\r\n        newItem[key] = value;\r\n        // console.log('newItem ', newItem, this.state.currItem);\r\n        // this.setState({ \r\n        //     currItem: {...newItem}\r\n        // });\r\n    }\r\n    // updateDesc = (e: React.FormEvent<HTMLTextAreaElement>) => {\r\n    //     this.setState({description: e.currentTarget.value});\r\n    // }\r\n    // updatePrice = (e: React.FormEvent<HTMLInputElement>) => {\r\n    //     this.setState({price: Number(e.currentTarget.value)});\r\n    // }\r\n    // updateShortStats = (e: React.FormEvent<HTMLInputElement>) => {\r\n    //     this.setState({shortStats: e.currentTarget.value});\r\n    // }\r\n    // updateVram = (e: React.FormEvent<HTMLInputElement>) => {\r\n    //     this.setState({vram: e.currentTarget.value});\r\n    // }\r\n    // updateImage = (e: React.FormEvent<HTMLInputElement>) => {\r\n    //     this.setState({image: e.currentTarget.value});\r\n    // }\r\n    // updateModel = (e: React.FormEvent<HTMLInputElement>) => {\r\n    //     this.setState({gpumodel: e.currentTarget.value});\r\n    // }\r\n    // updateProducer = (e: React.FormEvent<HTMLInputElement>) => {\r\n    //     this.setState({producer: e.currentTarget.value});\r\n    // }\r\n    // updateMemorytype = (e: React.FormEvent<HTMLInputElement>) => {\r\n    //     this.setState({memorytype: e.currentTarget.value});\r\n    // }\r\n    // updateConnectors = (e: React.FormEvent<HTMLInputElement>) => {\r\n    //     this.setState({connectors: e.currentTarget.value});\r\n    // }\r\n\r\n    // updateInput(e: { target: { name: keyof IState, value: any } }){\r\n    //     const key = e.target.name;\r\n    //     const value = e.target.value;\r\n    //     this.setState({ [key]: value });\r\n    // }\r\n\r\n    changeProduct = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n\r\n        // const dataOps = new DataOperations();\r\n        // dataOps.editProduct(this.state.currItem);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.currItem);\r\n        return (\r\n            <div className=\"panel__add-prod\">\r\n                <div className=\"panel__add-prod--title\">\r\n                    Edit product\r\n            </div>\r\n                <form className=\"panel__add-prod--form\">\r\n\r\n                    {/* {this.state.panelEditInputs} */}\r\n\r\n                    <input onChange={this.updateInput} name=\"name\" value={this.state.currItem.title} type=\"text\" className=\"panel__add-prod--name panel__add-prod--input\" placeholder=\"Name\" />\r\n                    <textarea onChange={this.updateInput} name=\"description\" value={this.state.currItem.description} className=\"panel__add-prod--desc panel__add-prod--input\" rows={4} placeholder=\"Description\"></textarea>\r\n                    <input onChange={this.updateInput} name=\"shortStats\" value={this.state.currItem.shortStats} type=\"text\" className=\"panel__add-prod--short-stats panel__add-prod--input\" placeholder=\"Short stats\" />\r\n                    <input onChange={this.updateInput} name=\"vram\" value={this.state.currItem.vram} type=\"text\" className=\"panel__add-prod--vram panel__add-prod--input\" placeholder=\"Vram\" />\r\n                    <input onChange={this.updateInput} name=\"image\" value={this.state.currItem.image} type=\"text\" className=\"panel__add-prod--image panel__add-prod--input\" placeholder=\"Image\" />\r\n                    <input onChange={this.updateInput} name=\"model\" value={this.state.currItem.gpumodel} type=\"text\" className=\"panel__add-prod--model panel__add-prod--input\" placeholder=\"Model\" />\r\n                    <input onChange={this.updateInput} name=\"producer\" value={this.state.currItem.producer} type=\"text\" className=\"panel__add-prod--producer panel__add-prod--input\" placeholder=\"Producer\" />\r\n                    <input onChange={this.updateInput} name=\"memorytype\" value={this.state.currItem.memorytype} type=\"text\" className=\"panel__add-prod--memorytype panel__add-prod--input\" placeholder=\"Memory type\" />\r\n                    <input onChange={this.updateInput} name=\"connectors\" value={this.state.currItem.connectors} type=\"text\" className=\"panel__add-prod--connectors panel__add-prod--input\" placeholder=\"Connectors\" />\r\n                    <input onChange={this.updateInput} name=\"shortStats\" value={this.state.currItem.shortStats} type=\"text\" className=\"panel__add-prod--price panel__add-prod--input\" placeholder=\"Price\" />\r\n\r\n                    <input onClick={this.changeProduct} type=\"button\" className=\"panel__add-prod--submit panel__add-prod--input\" value=\"Change\" />\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DataOperations from '../content/filter/DataOperations';\r\nimport './PanelProdsList.scss';\r\n\r\ninterface IProps { }\r\n\r\ninterface IState {\r\n    items: JSX.Element[],\r\n    dataOps: DataOperations,\r\n}\r\n\r\nexport default class PanelProdsList extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            dataOps: new DataOperations()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.state.dataOps.getFullData()\r\n            .then((data) => this.setState(() => ({\r\n                items: data.map(({ id, title, description, price }) => (\r\n                    <div className=\"panel__prods-list--item\">\r\n                        <span className=\"panel__prods-list--title\">{title}</span>\r\n                        <span className=\"panel__prods-list--description\">{description}</span>\r\n                        <span className=\"panel__prods-list--price\">{price}</span>\r\n                        <Link to={`/panel/edit/${id}`} className=\"panel__prods-list--edit\">Edit</Link>\r\n                        <span className=\"panel__prods-list--delete\">Del</span>\r\n                    </div>\r\n                ))\r\n            })));\r\n    }\r\n\r\n    changeProduct = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n\r\n        // const dataOps = new DataOperations();\r\n        // dataOps.editProduct(this.state.currItem);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"panel__prods-list\">\r\n                {this.state.items}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './PanelMenu.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst PanelMenu = () => {\r\n    return (\r\n        <nav className=\"panel__menu\">\r\n        <NavLink to=\"/panel/list\" className=\"panel__link\" activeClassName=\"active\">Products list</NavLink>\r\n            <NavLink to=\"/panel/add\" className=\"panel__link\" activeClassName=\"active\">Add product</NavLink>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default PanelMenu;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './Panel.scss';\r\nimport PanelAddProd from './PanelAddProd';\r\nimport PanelEditProd from './PanelEditProd';\r\nimport PanelProdsList from './PanelProdsList';\r\n\r\nimport PanelMenu from './PanelMenu';\r\n\r\nexport const Panel = () => {\r\n    return (\r\n        <section className=\"panel\">\r\n            <PanelMenu/>\r\n\r\n            <Switch>\r\n                <Route path=\"/panel/list\" component={PanelProdsList}/>\r\n                <Route path=\"/panel/add\" component={PanelAddProd}/>\r\n                <Route path=\"/panel/edit/:id\" component={PanelEditProd}/>\r\n            </Switch>\r\n        </section>\r\n    )\r\n}\r\nexport default Panel;","import React, { Component } from 'react';\r\nimport './Cart.scss';\r\nimport DataOperations from './filter/DataOperations';\r\nimport { IItem } from './views/gpus.model';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    itemIds: string[],\r\n    cartItems: JSX.Element[],\r\n}\r\n\r\nexport default class Cart extends Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            itemIds: [],\r\n            cartItems: [],\r\n        }\r\n    }\r\n\r\n    removeFromCart(id: string) {\r\n        const newString: any = localStorage.getItem('cartItems')?.replaceAll(id, '');\r\n        localStorage.setItem('cartItems', newString);\r\n        this.setCartItems();\r\n    }\r\n\r\n    setCartItems = () => {\r\n        const dataOps = new DataOperations();\r\n        let items: IItem[] = [];\r\n        localStorage.getItem('cartItems')?.split(' ').map((itemId) => {\r\n            // if(localStorage.getItem(`cartItem${i}`))\r\n            // itemId = localStorage.getItem(`cartItem${i}`);\r\n            if (itemId.length < 1 || itemId.includes('null')) {\r\n                return;\r\n            }\r\n            else {\r\n                dataOps.getItem(itemId)\r\n                    .then((item) => {\r\n                        items.push(item);\r\n                        return items;\r\n                    })\r\n                    .then(data => {\r\n                        const newCartItems = data.map(({ id, title, description, qty, price }, index) => {\r\n                            return (\r\n                                <div className=\"cart__item\" key={index}>\r\n                                    <span className=\"cart__id\">{id}</span>\r\n                                    <span className=\"cart__title\">{title}</span>\r\n                                    <span className=\"cart__description\">{description}</span>\r\n                                    <span className=\"cart__qty\">{qty}</span>\r\n                                    <span className=\"cart__price\">{price}</span>\r\n                                    <span className=\"cart__remove\" onClick={() => this.removeFromCart(id)}>Remove</span>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        );\r\n                        this.setState(() => ({ cartItems: newCartItems }));\r\n                    });\r\n            }\r\n        })\r\n\r\n        return items;\r\n    }\r\n\r\n    cleanCart() {\r\n        localStorage.clear();\r\n        this.setState(() => ({ cartItems: [] }));\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.setCartItems();\r\n    }\r\n\r\n    render() {\r\n        console.log(\"State item \", this.state.cartItems);\r\n        return (\r\n            <div className=\"cart\" >\r\n                {this.state.cartItems}\r\n                {this.state.cartItems.length ? (<span className=\"cart__remove-all\" onClick={() => this.cleanCart()}>Remove all</span>) :\r\n                (<span className=\"cart__empty\">Your cart is empty</span>)}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.scss';\n\nimport Header from './components/header/Header';\nimport Promotions from './components/promotions/Promotions';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from \"react-router-dom\";\nimport ItemsList from './components/content/ItemsList';\nimport ItemView from './components/content/ItemView';\nimport Panel from './components/panel/Panel';\nimport Cart from './components/content/Cart';\n\ninterface IParams{\n  params: {\n    id: number;\n  }\n}\n\nconst App: React.FC = () => {\n\n  return (\n      <div className=\"App\">\n            <Header/> \n\n            <main className=\"app__content\">\n              <div className=\"gray-cover\"></div>\n              <Switch>\n                <Route path=\"/search\" exact component={ItemsList}/>\n                <Route path=\"/search/:id\" component={ItemView} />\n                <Route path=\"/panel\" component={Panel}/>\n                <Route path=\"/cart\" component={Cart}/>\n              </Switch>\n                {/* <Route path=\"/\">\n                  <Promotions/>\n                </Route>\n                <Route path=\"/\">\n                  <ItemsList/>\n                </Route>\n                <Route path=\"/panel\">\n                  <Panel/>\n                </Route> */}\n            </main>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}